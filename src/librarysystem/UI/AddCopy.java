/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package librarysystem.UI;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import librarysystem.Data;
import librarysystem.Entities.Address;
import librarysystem.Entities.Publication;
import librarysystem.Entities.Author;
import librarysystem.Entities.Book;
import librarysystem.Entities.Copy;
import librarysystem.Entities.Magazine;
import librarysystem.Entities.Member;
import librarysystem.Entities.Reservation;

/**
 *
 * @author Pjayswal
 */
public class AddCopy extends javax.swing.JPanel {

    /**
     * Creates new form AddCopy
     */
    List<Author> authors;
    List<Book> books;
    List<Member> members;
    List<Address> address;
    List<Magazine> magazines;
    boolean filled;
    public AddCopy() {
        initComponents();
        authors = Data.authors;
        books = Data.books;
        members = Data.members;
        magazines =Data.magazines;
        address = Data.address;
        publicationOption.setSelectedIndex(0);
        //load book copies
        filled = false;
        for(Book c: books){
            publicationsList.addItem(c);
        }
        filled = true;
        populateCopyTable(books.get(0));
        
    }
    public void populateCopyTable(Publication p){
        DefaultTableModel defaultModel = (DefaultTableModel) copyTable.getModel();
        defaultModel.setRowCount(0);

            for(Copy c: p.getCopies()){
                defaultModel.addRow(new String[]{c.toString()});
            }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        publicationOption = new javax.swing.JComboBox();
        publicationsList = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        addCopyButton = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        copyTable = new javax.swing.JTable();
        numCopies = new javax.swing.JTextField();

        publicationOption.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Book", "Magazine" }));
        publicationOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicationOptionActionPerformed(evt);
            }
        });

        publicationsList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicationsListActionPerformed(evt);
            }
        });

        jLabel5.setText("Number of Copies:");

        addCopyButton.setText("Add Copies");
        addCopyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCopyButtonActionPerformed(evt);
            }
        });

        copyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Copy Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane9.setViewportView(copyTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(numCopies, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(530, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(addCopyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(publicationOption, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(publicationsList, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(75, 75, 75))))
                    .addGap(79, 79, 79)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(numCopies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(327, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(publicationOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(publicationsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(jLabel5)
                            .addGap(35, 35, 35)
                            .addComponent(addCopyButton)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void publicationsListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicationsListActionPerformed
        // TODO add your handling code here:
        Publication book = (Publication)publicationsList.getSelectedItem();
    }//GEN-LAST:event_publicationsListActionPerformed

    private void addCopyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCopyButtonActionPerformed
        // TODO add your handling code here:
        Integer num = Integer.parseInt(numCopies.getText().toString());
        Publication pub =(Publication) publicationsList.getSelectedItem();
        for(int i=0;i<num;i++){
            new Copy(pub);
        }
        populateCopyTable(pub);
    }//GEN-LAST:event_addCopyButtonActionPerformed

    private void publicationOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicationOptionActionPerformed
        // TODO add your handling code here:
        publicationsList.removeAllItems();
        if(publicationOption.getSelectedIndex()==0){
            filled = false;
            
            for(Book c: books){
                publicationsList.addItem(c);
            }
            filled = true;
            populateCopyTable(books.get(0));
        }
        else{
            filled = false;
            for(Magazine c: magazines){
                publicationsList.addItem(c);
            }
            filled = true;
            populateCopyTable(magazines.get(0));
        }
    }//GEN-LAST:event_publicationOptionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCopyButton;
    private javax.swing.JTable copyTable;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField numCopies;
    private javax.swing.JComboBox publicationOption;
    private javax.swing.JComboBox publicationsList;
    // End of variables declaration//GEN-END:variables
}
