/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package librarysystem.UI;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import librarysystem.Data;
import librarysystem.Entities.Address;
import librarysystem.Entities.Author;
import librarysystem.Entities.Book;
import librarysystem.Entities.Magazine;
import librarysystem.Entities.Member;
import librarysystem.Entities.Reservation;

/**
 *
 * @author Pramod
 */
public class ReservationTab extends javax.swing.JPanel {

    List<Author> authors;
    List<Book> books;
    List<Member> members;
    List<Address> address;
    List<Magazine> magazines;
    boolean memberFilled;
    boolean reservationFilled;
    /**
     * Creates new form ReservationTab
     */
    public ReservationTab() {
        initComponents();
        authors = Data.authors;
        books = Data.books;
        members = Data.members;
        magazines =Data.magazines;
        address = Data.address;
        
        memberFilled=false;
        reservationFilled=false;
       
    }
    public void setMembers(){
        clearMembers();
        for(Member member: members){
            findMemberByName.addItem(member);
            findMemberbyId.addItem(member.getMemberId());
        }

        memberFilled =true;
       
    }
    public void clearMembers(){
        memberFilled =false;
        findMemberByName.removeAllItems();
        findMemberbyId.removeAllItems();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        findMemberbyId = new javax.swing.JComboBox();
        findMemberByName = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel27 = new javax.swing.JPanel();
        reservationComboBox = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        pickUpButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        reservationTable = new javax.swing.JTable();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Find Member"));

        jLabel1.setText("By Id:");

        findMemberbyId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findMemberbyIdActionPerformed(evt);
            }
        });

        findMemberByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findMemberByNameActionPerformed(evt);
            }
        });

        jLabel2.setText("By Name:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(findMemberbyId, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(162, 162, 162))
                    .addComponent(findMemberByName, 0, 223, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findMemberbyId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findMemberByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder("Reservations"));

        reservationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationComboBoxActionPerformed(evt);
            }
        });

        jLabel15.setText("Item:");

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(reservationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reservationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));

        pickUpButton.setText("Pickup");
        pickUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickUpButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pickUpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(pickUpButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelButton)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Reservations"));

        reservationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member", "Publication", "Status", "Status Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(reservationTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(218, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void findMemberbyIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findMemberbyIdActionPerformed
        // TODO add your handling code here:
        if(memberFilled==true){
            findMemberByName.setSelectedIndex(findMemberbyId.getSelectedIndex());
            populateComponents((Member)findMemberByName.getSelectedItem());
        }
    }//GEN-LAST:event_findMemberbyIdActionPerformed

    private void findMemberByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findMemberByNameActionPerformed
        // TODO add your handling code here:
        if(memberFilled==true){
            findMemberbyId.setSelectedIndex(findMemberByName.getSelectedIndex());
            populateComponents((Member)findMemberByName.getSelectedItem());
        }
        
    }//GEN-LAST:event_findMemberByNameActionPerformed

    public void populateReservationComboBox(Member member){
        reservationFilled=false;
        reservationComboBox.removeAllItems();
        for(Reservation reservation:member.getReservations()){
            if(reservation.getStatus().equals(Reservation.STATUS_ONHOLD)||reservation.getStatus().equals(Reservation.STATUS_PENDING))
                reservationComboBox.addItem(reservation);
        }
        reservationFilled=true;
    }
    public void populateReservationTable(Member member){
        DefaultTableModel defaultModel = (DefaultTableModel) reservationTable.getModel();
        defaultModel.setRowCount(0);
        for(Reservation reservation: member.getReservations()){
            defaultModel.addRow(reservation.getVector());
        }
    }
    private void reservationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationComboBoxActionPerformed
        // TODO add your handling code here:
        if(reservationFilled){
            Reservation reservation =(Reservation) reservationComboBox.getSelectedItem();
            if(reservation.getStatus().equals(Reservation.STATUS_ONHOLD)){
                pickUpButton.setEnabled(true);
                cancelButton.setEnabled(true);
            }
            else{
                pickUpButton.setEnabled(false);
            }
            populateReservationTable((Member)findMemberByName.getSelectedItem());
        }
    }//GEN-LAST:event_reservationComboBoxActionPerformed

    private void pickUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickUpButtonActionPerformed
        Reservation reservation =(Reservation) reservationComboBox.getSelectedItem();
        Member member =(Member) findMemberByName.getSelectedItem();
        member.pickUp(reservation);
        //initialize();
        populateComponents(member);
        pickUpButton.setEnabled(false);
        cancelButton.setEnabled(false);
        
    }//GEN-LAST:event_pickUpButtonActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        initialize();
    }//GEN-LAST:event_formMouseClicked

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        Reservation reservation =(Reservation) reservationComboBox.getSelectedItem();
        Member member =(Member) findMemberByName.getSelectedItem();
        member.cancelReservation(reservation);
        populateComponents(member);
        cancelButton.setEnabled(false);
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    public void initialize(){
        setMembers();
        populateComponents(members.get(0));
        
    }
    public void populateComponents(Member member){
        findMemberbyId.setSelectedItem(member.getMemberId());
        findMemberByName.setSelectedItem(member);
        populateReservationComboBox(member);
        populateReservationTable(member);
        if(member.getUnfullFilledReservation().size()==0){
            reservationComboBox.setEnabled(false);
            pickUpButton.setEnabled(false);
            cancelButton.setEnabled(false);
        }
        else{
            reservationComboBox.setEnabled(true);
            Reservation reservation = member.getUnfullFilledReservation().get(0);
            if(reservation.getStatus().equals(Reservation.STATUS_PENDING))
                pickUpButton.setEnabled(false);
            else
                pickUpButton.setEnabled(true);
            cancelButton.setEnabled(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox findMemberByName;
    private javax.swing.JComboBox findMemberbyId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton pickUpButton;
    private javax.swing.JComboBox reservationComboBox;
    private javax.swing.JTable reservationTable;
    // End of variables declaration//GEN-END:variables
}
